// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: wheatherservice.proto

package WheatherService

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrentWheatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=City,proto3" json:"City,omitempty"`
}

func (x *CurrentWheatherRequest) Reset() {
	*x = CurrentWheatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentWheatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentWheatherRequest) ProtoMessage() {}

func (x *CurrentWheatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentWheatherRequest.ProtoReflect.Descriptor instead.
func (*CurrentWheatherRequest) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{0}
}

func (x *CurrentWheatherRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type CurrentWheatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=LocalTime,proto3" json:"LocalTime,omitempty"`
	Country   string               `protobuf:"bytes,2,opt,name=Country,proto3" json:"Country,omitempty"`
	TempC     float32              `protobuf:"fixed32,3,opt,name=TempC,proto3" json:"TempC,omitempty"`
	WindKmph  float32              `protobuf:"fixed32,4,opt,name=WindKmph,proto3" json:"WindKmph,omitempty"`
	Humidity  int32                `protobuf:"varint,5,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
}

func (x *CurrentWheatherResponse) Reset() {
	*x = CurrentWheatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentWheatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentWheatherResponse) ProtoMessage() {}

func (x *CurrentWheatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentWheatherResponse.ProtoReflect.Descriptor instead.
func (*CurrentWheatherResponse) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentWheatherResponse) GetLocalTime() *timestamp.Timestamp {
	if x != nil {
		return x.LocalTime
	}
	return nil
}

func (x *CurrentWheatherResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CurrentWheatherResponse) GetTempC() float32 {
	if x != nil {
		return x.TempC
	}
	return 0
}

func (x *CurrentWheatherResponse) GetWindKmph() float32 {
	if x != nil {
		return x.WindKmph
	}
	return 0
}

func (x *CurrentWheatherResponse) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type ForecastWheatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=City,proto3" json:"City,omitempty"`
	Days int32  `protobuf:"varint,2,opt,name=Days,proto3" json:"Days,omitempty"`
}

func (x *ForecastWheatherRequest) Reset() {
	*x = ForecastWheatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForecastWheatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastWheatherRequest) ProtoMessage() {}

func (x *ForecastWheatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastWheatherRequest.ProtoReflect.Descriptor instead.
func (*ForecastWheatherRequest) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{2}
}

func (x *ForecastWheatherRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ForecastWheatherRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type ForecastWheatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []*Forecast `protobuf:"bytes,1,rep,name=Days,proto3" json:"Days,omitempty"`
}

func (x *ForecastWheatherResponse) Reset() {
	*x = ForecastWheatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForecastWheatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastWheatherResponse) ProtoMessage() {}

func (x *ForecastWheatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastWheatherResponse.ProtoReflect.Descriptor instead.
func (*ForecastWheatherResponse) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{3}
}

func (x *ForecastWheatherResponse) GetDays() []*Forecast {
	if x != nil {
		return x.Days
	}
	return nil
}

type Forecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City      string               `protobuf:"bytes,1,opt,name=City,proto3" json:"City,omitempty"`
	LocalTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=LocalTime,proto3" json:"LocalTime,omitempty"`
	Country   string               `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	TempC     float32              `protobuf:"fixed32,4,opt,name=TempC,proto3" json:"TempC,omitempty"`
	WindKmph  float32              `protobuf:"fixed32,5,opt,name=WindKmph,proto3" json:"WindKmph,omitempty"`
	Humidity  int32                `protobuf:"varint,6,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
}

func (x *Forecast) Reset() {
	*x = Forecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Forecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Forecast) ProtoMessage() {}

func (x *Forecast) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Forecast.ProtoReflect.Descriptor instead.
func (*Forecast) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{4}
}

func (x *Forecast) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Forecast) GetLocalTime() *timestamp.Timestamp {
	if x != nil {
		return x.LocalTime
	}
	return nil
}

func (x *Forecast) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Forecast) GetTempC() float32 {
	if x != nil {
		return x.TempC
	}
	return 0
}

func (x *Forecast) GetWindKmph() float32 {
	if x != nil {
		return x.WindKmph
	}
	return 0
}

func (x *Forecast) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type ReportWheatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City      string               `protobuf:"bytes,1,opt,name=City,proto3" json:"City,omitempty"`
	LocalTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=LocalTime,proto3" json:"LocalTime,omitempty"`
	Country   string               `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	TempC     float32              `protobuf:"fixed32,4,opt,name=TempC,proto3" json:"TempC,omitempty"`
	WindKmph  float32              `protobuf:"fixed32,5,opt,name=WindKmph,proto3" json:"WindKmph,omitempty"`
	Humidity  int32                `protobuf:"varint,6,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
}

func (x *ReportWheatherRequest) Reset() {
	*x = ReportWheatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportWheatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportWheatherRequest) ProtoMessage() {}

func (x *ReportWheatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportWheatherRequest.ProtoReflect.Descriptor instead.
func (*ReportWheatherRequest) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{5}
}

func (x *ReportWheatherRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ReportWheatherRequest) GetLocalTime() *timestamp.Timestamp {
	if x != nil {
		return x.LocalTime
	}
	return nil
}

func (x *ReportWheatherRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ReportWheatherRequest) GetTempC() float32 {
	if x != nil {
		return x.TempC
	}
	return 0
}

func (x *ReportWheatherRequest) GetWindKmph() float32 {
	if x != nil {
		return x.WindKmph
	}
	return 0
}

func (x *ReportWheatherRequest) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type ReportWheatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReported bool `protobuf:"varint,1,opt,name=IsReported,proto3" json:"IsReported,omitempty"`
}

func (x *ReportWheatherResponse) Reset() {
	*x = ReportWheatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wheatherservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportWheatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportWheatherResponse) ProtoMessage() {}

func (x *ReportWheatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wheatherservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportWheatherResponse.ProtoReflect.Descriptor instead.
func (*ReportWheatherResponse) Descriptor() ([]byte, []int) {
	return file_wheatherservice_proto_rawDescGZIP(), []int{6}
}

func (x *ReportWheatherResponse) GetIsReported() bool {
	if x != nil {
		return x.IsReported
	}
	return false
}

var File_wheatherservice_proto protoreflect.FileDescriptor

var file_wheatherservice_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x68, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79,
	0x22, 0xbb, 0x01, 0x0a, 0x17, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x68, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x64, 0x4b, 0x6d,
	0x70, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x64, 0x4b, 0x6d,
	0x70, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0x41,
	0x0a, 0x17, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x44, 0x61, 0x79,
	0x73, 0x22, 0x42, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x57, 0x68, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x04, 0x44, 0x61, 0x79, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65,
	0x6d, 0x70, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x54, 0x65, 0x6d, 0x70, 0x43,
	0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x64, 0x4b, 0x6d, 0x70, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x64, 0x4b, 0x6d, 0x70, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65,
	0x6d, 0x70, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x54, 0x65, 0x6d, 0x70, 0x43,
	0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x6e, 0x64, 0x4b, 0x6d, 0x70, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x57, 0x69, 0x6e, 0x64, 0x4b, 0x6d, 0x70, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0x38, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x32, 0xa5, 0x02, 0x0a, 0x0f, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x68,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x57, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x57, 0x68, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x2f, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x57, 0x68, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wheatherservice_proto_rawDescOnce sync.Once
	file_wheatherservice_proto_rawDescData = file_wheatherservice_proto_rawDesc
)

func file_wheatherservice_proto_rawDescGZIP() []byte {
	file_wheatherservice_proto_rawDescOnce.Do(func() {
		file_wheatherservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_wheatherservice_proto_rawDescData)
	})
	return file_wheatherservice_proto_rawDescData
}

var file_wheatherservice_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_wheatherservice_proto_goTypes = []interface{}{
	(*CurrentWheatherRequest)(nil),   // 0: genproto.CurrentWheatherRequest
	(*CurrentWheatherResponse)(nil),  // 1: genproto.CurrentWheatherResponse
	(*ForecastWheatherRequest)(nil),  // 2: genproto.ForecastWheatherRequest
	(*ForecastWheatherResponse)(nil), // 3: genproto.ForecastWheatherResponse
	(*Forecast)(nil),                 // 4: genproto.Forecast
	(*ReportWheatherRequest)(nil),    // 5: genproto.ReportWheatherRequest
	(*ReportWheatherResponse)(nil),   // 6: genproto.ReportWheatherResponse
	(*timestamp.Timestamp)(nil),      // 7: google.protobuf.Timestamp
}
var file_wheatherservice_proto_depIdxs = []int32{
	7, // 0: genproto.CurrentWheatherResponse.LocalTime:type_name -> google.protobuf.Timestamp
	4, // 1: genproto.ForecastWheatherResponse.Days:type_name -> genproto.Forecast
	7, // 2: genproto.Forecast.LocalTime:type_name -> google.protobuf.Timestamp
	7, // 3: genproto.ReportWheatherRequest.LocalTime:type_name -> google.protobuf.Timestamp
	0, // 4: genproto.WheatherService.GetCurrentWeather:input_type -> genproto.CurrentWheatherRequest
	2, // 5: genproto.WheatherService.GetWeatherForecast:input_type -> genproto.ForecastWheatherRequest
	5, // 6: genproto.WheatherService.ReportWeatherCondition:input_type -> genproto.ReportWheatherRequest
	1, // 7: genproto.WheatherService.GetCurrentWeather:output_type -> genproto.CurrentWheatherResponse
	3, // 8: genproto.WheatherService.GetWeatherForecast:output_type -> genproto.ForecastWheatherResponse
	6, // 9: genproto.WheatherService.ReportWeatherCondition:output_type -> genproto.ReportWheatherResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wheatherservice_proto_init() }
func file_wheatherservice_proto_init() {
	if File_wheatherservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wheatherservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentWheatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wheatherservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentWheatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wheatherservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForecastWheatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wheatherservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForecastWheatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wheatherservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Forecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wheatherservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportWheatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wheatherservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportWheatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wheatherservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wheatherservice_proto_goTypes,
		DependencyIndexes: file_wheatherservice_proto_depIdxs,
		MessageInfos:      file_wheatherservice_proto_msgTypes,
	}.Build()
	File_wheatherservice_proto = out.File
	file_wheatherservice_proto_rawDesc = nil
	file_wheatherservice_proto_goTypes = nil
	file_wheatherservice_proto_depIdxs = nil
}
